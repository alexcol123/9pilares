// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// npx prisma generate
// npx prisma db push

// or to run both:  npx prisma generate &&   npx prisma db push

// npx prisma studio

// To delete all DB
// npx prisma migrate reset

// For Stripe  webhook 
//stripe listen --forward-to localhost:3000/api/stripe-webhook

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Perfil {
  id           String   @id @default(uuid())
  clerkId      String   @unique
  nombre       String
  apellido     String
  usuario      String
  email        String
  imagenPerfil String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  productos Producto[]
}

model Producto {
  id            String   @id @default(uuid())
  nombre        String
  tagline       String
  descripcion   String
  precio        Int
  precioElevado Int
  categoria     String
  imagenes      String[] @default([])
  cantidad      Int?     @default(1)

  ancho Int @default(0)
  alto  Int @default(0)
  largo Int @default(0)
  peso  Int @default(0)

  onSale     Boolean @default(false)
  outOfStock Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  precioPagado Int

  perfil   Perfil? @relation(fields: [perfilId], references: [clerkId], onDelete: Cascade)
  perfilId String?
}
